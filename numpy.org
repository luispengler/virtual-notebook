#+TITLE: NumPy - Learning some basics
#+DESCRIPTION: NumPy - Learning some basics
#+SETUPFILE: https://luispengler.github.io/site/org-html-themes/org/theme-readtheorg.setup
#+OPTIONS: num:nil ^:{} toc:1

* Introduction
So, my mentor gave me my first task to learn some stuff around NumPy, Panda, and Scikit-Learn until Sunday (today is Thursday).
+ My mentor is [[https://scholar.google.com/citations?user=cHCDiIYAAAAJ][Dr. Abhijit Sen]], and we are starting research through the project [[https://www.ndeavours.org/][Ndeavours]]
+ Keep tuned for updates into what we are doing - I don't know yet because we just started, but it will have something to do with AI.

* What is NumPy?
+ A multi-dimensional array library, meaning you can use it to store all sorts of data, in 1D arrays up to 3D arrays (I guess you could go more, but I don't know if it's true)
** NumPy vs Lists
+ Lists are slow and NumPy fast
+ NumPy uses Fixed Type -> it stores all data into a 32 bit memory (int32), and you can specify other bit values for saving (int16, int8 for example)
+ Lists uses a built-in inttype for python that contains four different things (object value, object type, reference count, and size)
*** Representing 5
+ So as an example, 5 that can be read as 00000101 in bynary is represented with
+ 3 empty bytes + 00000101 in NumPy
+ 3 int64 + 3 empty bytes + 00000101 in Lists
+ The difference in memory is huge!
*** Takeaway
+ NumPy is faster to read less bytes of memory
+ No type checking when interating through objects
+ NumPy also utilizes contiguous memory (not gonna explain it here)
*** The difference in utilzation
+ In Lists you can do Insertion, deletion, appending, concatenation, etc.

~a = [1,3,5]~
~b = [1,2,3]~
~a*b = ERROR~

+ In NumPy you can do Insertion, deletion, appending, concatenation, etc + Lost More

~a = np.array([1,3,5])~
~b = np.array([1,2,3])~
~a*b = np.array([1,6,15])~

** Applications
+ A MATLAB Replacement (maybe)
+ Plotting (Matplotlib)
+ Backend (Pandas, Connect 4, Digital Photography) -> Guess I will be learning it primarly for Pandas
+ Machine Learning -> Guess I will be learning it for this reason

* Some code I followed along with
#+BEGIN_SRC
#!/usr/bin/env python3

# Load in NumPy (remember to pip install numpy first)
import numpy as np

# The Basics
a = np.array([1,2,3], dtype='int16' )
print(a)
b = np.array([[9.0,8.0,7.0], [6.0,5.0,4.0]])
print(b)
# Get Dimension
print(a.ndim)
# Get Shape
print(b.shape)
# Get Type
print(a.dtype)
print(b.dtype)
# Get Size
print(a.itemsize)
print(b.itemsize)
# Get total size
print(a.size * a.itemsize) # or using:
print(a.nbytes)

#+END_SRC
* Resources
** Videos
+ Python NumPy Tutorial for Beginners
